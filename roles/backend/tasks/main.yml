- name: disable NODEJS default version
  ansible.builtin.shell: dnf module disable nodejs -y
- name: Enable NODEJS 18 version
  ansible.builtin.shell: dnf module enable nodejs:18 -y
- name: Install NODEJS
  ansible.builtin.dnf:
    name: nodejs
    state: present
- name: copy Backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service
- name: Add Application user
  ansible.builtin.user:
    name: expense
- name: Import Common Role - App Pre-requisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-prereq
  vars:
    app_dir: /app
    component: backend
- name: Download NODEJS dependencies
  ansible.builtin.shell: npm install
  args:
    chdir: /app
- name: Install MYSQL client
  ansible.builtin.dnf:
    name: mysql
    state: present
- name: load schema
  ansible.builtin.shell: mysql -h {{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_HOST', region='us-east-1' ) }} -u{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_USER', region='us-east-1' ) }} -p{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_PASS', region='us-east-1' ) }} < /app/schema/backend.sql
- name: starting backend service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes
- name: Import ELK Role - Filebeat
  ansible.builtin.import_role:
    name: elk
    tasks_from: filebeat